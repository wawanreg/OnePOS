@model OnePOS.Models.Dashboard.Items.ActionItemViewModels

@{
    ViewBag.Title = "EditItem";
    Layout = "~/Views/Shared/_LayoutForDashboard.cshtml";
}

<div id="wrapper">
    <div id="page-wrapper">
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Edit Item</h1>
            </div>
            <!-- /.col-lg-12 -->
        </div>
        
        
        <div class="row">
            <div class="edit-items-section">
                @using (Html.BeginForm("DashboardEditItem", "Dashboard", FormMethod.Post, new { @id = "EditItemPost", @class = "form-horizontal", role = "form" }))
                {
                    <div class="form-section edit-items-manual section-header">
                        @Html.HiddenFor(m => m.ItemVendor, new { @id = "ItemVendor" })
                        @Html.HiddenFor(m => m.ItemBrandCategory, new { @id = "ItemBrandCategory" })
                        @Html.HiddenFor(m => m.ItemStorage, new { @id = "ItemStorage" })
                        @Html.HiddenFor(m => m.ItemBrandType, new { @id = "ItemBrandType" })

                        <div class="items-group-list">
                            <div class="panel panel-default items-form-container">
                                <div class="panel-body items-group-form">
                                    
                                    <div class="form-group">
                                        <div class="col-sm-3 item-name">
                                            <label class="control-label">Items Name</label>
                                            @Html.TextBoxFor(x => x.ItemName, new { @class = "form-control" })
                                        </div>
                                        <div class="col-sm-3 item-sale-price">
                                            <label class="control-label">Sale Price</label>
                                            @Html.TextBoxFor(x => x.ItemSalePrice, new { @class = "form-control", @onchange = "changeInputNumber(this)" }) 
                                        </div>
                                        <div class="col-sm-3 item-buy-price">
                                            <label class="control-label">Buy Price</label>
                                            @Html.TextBoxFor(x => x.ItemBuyPrice, new { @class = "form-control", @onchange = "changeInputNumber(this)" }) 
                                        </div>
                                        <div class="col-lg-3 item-quantity">
                                            <label class="control-label">Stock</label>
                                            @Html.TextBoxFor(x => x.ItemQuantitiy, new { @class = "form-control", @onchange = "changeInputNumber(this)" }) 
                                        </div>
                                        
                                    </div>
                                    <div class="form-group">
                                        <div class="col-lg-3 item-storage">
                                            <label class="control-label">Item Location</label>
                                            @Html.DropDownListFor(m => m.ItemStorage, Model.StorageDropdownLists, new { @class = "form-control" })
                                        </div>
                                        <div class="col-lg-3 item-brand-type">
                                            <label class="control-label">Brand</label>
                                            @Html.DropDownListFor(m => m.ItemBrandType, Model.BranchDropdownLists, new { @class = "form-control" })
                                        </div>
                                        <div class="col-lg-3 item-vendor">
                                            <label class="control-label">Vendor</label>
                                            @*<input class="form-control" />*@
                                            @Html.DropDownListFor(m => m.ItemVendor, Model.VendorDropdownLists, new { @class = "form-control" })
                                        </div>
                                        <div class="col-lg-3 item-brand-category">
                                            <label class="control-label">Brand Category</label>
                                            @Html.DropDownListFor(m => m.ItemBrandCategory, Model.BranchCategoryDropdownLists, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                           
                        </div>
                    </div>

                    <div class="edit-item-input-btn">
                        <input type="submit" value="Edit Item" class="btn btn-blue btn-lg submit-button" />
                    </div>
                    
                }

            </div>

        </div>
     

    </div>

    <!-- /#page-wrapper -->
</div>
<!-- /#wrapper -->

@section AdditionalJavascript {
    <script src="~/Assets/js/Items/editItem.js"></script>
    
}

@section PageJavascript {
    <script>
        functionEditFormItem();
    </script>
}